name: Rust

on:
  push:
    branches: [main]
    paths: ["**.rs", "Cargo.toml", ".github/workflows/rust.yml"]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Check formatting
        run: cargo fmt -- --check
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: install deps
        run: ./build/setup.sh && ./build/postsetup.sh
      - name: Build with all default solvers (no cplex)
        run: cargo build --features all_default_solvers --tests
      - name: Run tests with all default solvers (no cplex)
        # test on a single thread. See: https://github.com/KardinalAI/coin_cbc/issues/9
        run: cargo test  --features all_default_solvers -- --test-threads=1
      - name: Run tests with microlp
        run: cargo test --no-default-features --features microlp
      - name: Run tests with lpsolve
        run: cargo test --no-default-features --features lpsolve
      - name: Run tests with highs
        run: cargo test --no-default-features --features highs
      - name: Run tests with lp_solvers
        run: cargo test --no-default-features --features lp-solvers
      - name: Run tests with SCIP
        run: cargo test --no-default-features --features "scip,scip_bundled"
      - name: Run tests with CPLEX
        run: cargo test --no-default-features --features cplex-rs
      - name: Run tests with Clarabel
        run: cargo test --no-default-features --features clarabel
      - name: Run tests with Clarabel on WASM
        run: wasm-pack test --node --no-default-features --features "clarabel"
      - name: Run tests with microlp on WASM
        run: wasm-pack test --node --no-default-features --features microlp
      - run: cargo bench
